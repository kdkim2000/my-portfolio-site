# .github/workflows/deploy.yml
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    # GitHub Pages 설정을 위한 환경 변수
    - name: Setup Pages
      uses: actions/configure-pages@v4
        
    - name: Install dependencies
      run: |
        rm -rf node_modules package-lock.json
        npm install
        
    # 린트 검사 (실패해도 계속 진행)
    - name: Run ESLint
      run: |
        if npm run lint; then
          echo "✅ ESLint passed"
        else
          echo "⚠️ ESLint failed but continuing build"
        fi
      continue-on-error: true
      
    # 타입 검사 (실패해도 계속 진행)
    - name: Type check
      run: |
        if npm run type-check; then
          echo "✅ Type check passed"
        else
          echo "⚠️ Type check failed but continuing build"
        fi
      continue-on-error: true
        
    # 빌드 실행
    - name: Build
      run: npm run build
      env:
        NODE_ENV: production
        
    # 빌드 결과 확인
    - name: Check build output
      run: |
        ls -la dist/
        echo "Build completed successfully"
        
    # Pages 아티팩트 업로드
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

---

# .github/workflows/ci.yml - PR용 CI 워크플로우
name: Continuous Integration

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches-ignore: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit
      
    - name: Run ESLint
      run: npm run lint
      continue-on-error: true
      
    - name: Type check
      run: npm run type-check
      continue-on-error: true
      
    - name: Build test
      run: npm run build
      env:
        NODE_ENV: production